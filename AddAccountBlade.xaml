<UserControl x:Class="ragaccountmgr.AddAccountBlade"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ragaccountmgr"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             Height="Auto" Width="400">
    <UserControl.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <local:EditModeHeaderConverter x:Key="EditModeHeaderConverter"/>
        <local:EditModeSaveButtonConverter x:Key="EditModeSaveButtonConverter"/>
        
        <!-- Consistent button styles -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        
        <Style x:Key="CancelButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#DA6C6C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        
        <Style x:Key="DangerButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#AF3E3E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        
        <Style x:Key="RemoveButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#DC3545"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Content" Value="✕"/>
        </Style>
        
        <Style x:Key="PlaceholderTextBoxStyle" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Padding="{TemplateBinding Padding}"
                                     VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                     HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     FontWeight="{TemplateBinding FontWeight}"
                                     Foreground="{TemplateBinding Foreground}"
                                     TextWrapping="{TemplateBinding TextWrapping}"
                                     AcceptsReturn="{TemplateBinding AcceptsReturn}"
                                     VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                     x:Name="PART_TextBox"/>
                            <TextBlock Text="{TemplateBinding Tag}" 
                                       Foreground="Gray" 
                                       IsHitTestVisible="False"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="{TemplateBinding Padding}"
                                       x:Name="PlaceholderText">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=PART_TextBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsFocused, ElementName=PART_TextBox}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Background="#4CAF50" Padding="20,15">
            <TextBlock d:Text="Editar" Text="{Binding IsEditMode, Converter={StaticResource EditModeHeaderConverter}}" FontSize="18" FontWeight="Bold" Foreground="White" VerticalAlignment="Center"/>
        </Border>

        <!-- Input Fields -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Padding="20">
            <StackPanel>
                <!-- Username -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Usuário" FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding NewAccount.Username, UpdateSourceTrigger=PropertyChanged}" 
                             Grid.Column="1" Padding="8"/>
                </Grid>

                <!-- Password -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Senha" FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding NewAccount.Password, UpdateSourceTrigger=PropertyChanged}" 
                             Grid.Column="1" Padding="8"/>
                </Grid>

                <!-- Optional Field Buttons -->
                <StackPanel Orientation="Horizontal" Margin="0,20,0,15">
                    <Button Content="PIN" Command="{Binding AddPinCodeCommand}"
                            Style="{StaticResource PrimaryButtonStyle}"
                            Visibility="{Binding NewAccount.ShowPinCodeField, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                    <Button Content="OTP" Command="{Binding AddOtpCodeCommand}"
                            Style="{StaticResource PrimaryButtonStyle}"
                            Visibility="{Binding NewAccount.ShowOtpCodeField, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                    <Button Content="Kafra" Command="{Binding AddStorageCodeCommand}"
                            Style="{StaticResource PrimaryButtonStyle}"
                            Visibility="{Binding NewAccount.ShowStorageCodeField, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                </StackPanel>

                <!-- PIN Code -->
                <Grid Margin="0,0,0,15" Visibility="{Binding NewAccount.ShowPinCodeField, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="PIN" FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding NewAccount.PinCode, UpdateSourceTrigger=PropertyChanged}" 
                             Grid.Column="1" Padding="8"/>
                    <Button Command="{Binding RemovePinCodeCommand}"
                            Grid.Column="2" Style="{StaticResource RemoveButtonStyle}"/>
                </Grid>

                <!-- TOTP -->
                <Grid Margin="0,0,0,15" Visibility="{Binding NewAccount.ShowOtpCodeField, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Senha OTP" FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding NewAccount.OtpSeed, UpdateSourceTrigger=PropertyChanged}" 
                             Grid.Column="1" Padding="8" Tag="Insira a chave TOTP em base32"/>
                    <Button Command="{Binding RemoveOtpCodeCommand}"
                            Grid.Column="2" Style="{StaticResource RemoveButtonStyle}"/>
                </Grid>

                <!-- Storage Code -->
                <Grid Margin="0,0,0,15" Visibility="{Binding NewAccount.ShowStorageCodeField, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Kafra" FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding NewAccount.StorageCode, UpdateSourceTrigger=PropertyChanged}" 
                             Grid.Column="1" Padding="8"/>
                    <Button Command="{Binding RemoveStorageCodeCommand}"
                            Grid.Column="2" Style="{StaticResource RemoveButtonStyle}"/>
                </Grid>

                <!-- Comments (Always Visible) -->
                <Grid Margin="0,20,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Comentários" FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Top" Margin="0,8,0,0"/>
                    <TextBox Text="{Binding NewAccount.Comments, UpdateSourceTrigger=PropertyChanged}" 
                             Grid.Column="1" Padding="8" Height="80"
                             TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"/>
                </Grid>
            </StackPanel>
        </ScrollViewer>

        <!-- Bottom Buttons -->
        <Border Grid.Row="2" Background="#F5F5F5" Padding="20,15">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Delete Button (Left aligned, only visible in edit mode) -->
                <Button Content="Excluir Conta" Command="{Binding DeleteAccountCommand}" 
                        Style="{StaticResource DangerButtonStyle}"
                        HorizontalAlignment="Left"
                        Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                
                <!-- Save/Cancel Buttons (Right aligned) -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Cancelar" Command="{Binding HideAddBladeCommand}" 
                            Style="{StaticResource CancelButtonStyle}"/>
                    <Button d:Content="Salvar" Content="{Binding IsEditMode, Converter={StaticResource EditModeSaveButtonConverter}}" Command="{Binding AddAccountCommand}" 
                            Style="{StaticResource PrimaryButtonStyle}" IsDefault="True"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl> 